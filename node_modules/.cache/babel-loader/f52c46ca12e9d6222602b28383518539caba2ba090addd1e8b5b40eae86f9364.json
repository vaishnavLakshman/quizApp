{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS_101\\\\quizapp_v1.0\\\\src\\\\Components\\\\Dashboard\\\\Quiz\\\\StopWatch\\\\Stopwatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./Stopwatch.css\";\nimport { useAsyncError } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stopwatch(props) {\n  _s();\n  // state to store time\n  const [time, setTime] = useState(0);\n  const [finalTime, setFinalTime] = useState();\n\n  // state to check stopwatch running or not\n  const [isRunning, setIsRunning] = useState();\n  console.log(\"PROPSS :\" + JSON.stringify(props));\n  useEffect(() => {\n    let intervalId;\n    setIsRunning(props.run);\n    if (isRunning) {\n      // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time + 1), 10);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time, props]);\n  const setStopTime = useCallback(() => {}, [isRunning]);\n\n  // Hours calculation\n  const hours = Math.floor(time / 360000);\n\n  // Minutes calculation\n  const minutes = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // Milliseconds calculation\n  const milliseconds = time % 100;\n\n  // Method to start and stop timer\n  const startAndStop = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Method to reset timer back to 0\n  const reset = () => {\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stopwatch-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"stopwatch-time\",\n      children: [hours, \":\", minutes.toString().padStart(2, \"0\"), \":\", seconds.toString().padStart(2, \"0\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Stopwatch, \"XIhBw5r7JlLTJ88qGVtfWJ3FKZI=\");\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAsyncError","jsxDEV","_jsxDEV","Stopwatch","props","_s","time","setTime","finalTime","setFinalTime","isRunning","setIsRunning","console","log","JSON","stringify","intervalId","run","setInterval","clearInterval","setStopTime","hours","Math","floor","minutes","seconds","milliseconds","startAndStop","reset","className","children","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactJS_101/quizapp_v1.0/src/Components/Dashboard/Quiz/StopWatch/Stopwatch.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./Stopwatch.css\";\r\nimport { useAsyncError } from \"react-router-dom\";\r\n\r\nfunction Stopwatch(props) {\r\n  // state to store time\r\n  const [time, setTime] = useState(0);\r\n  const [finalTime, setFinalTime] = useState();\r\n\r\n  // state to check stopwatch running or not\r\n  const [isRunning, setIsRunning] = useState();\r\n  console.log(\"PROPSS :\" + JSON.stringify(props));\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n    setIsRunning(props.run);\r\n    if (isRunning) {\r\n      // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\r\n      intervalId = setInterval(() => setTime(time + 1), 10);\r\n    }\r\n    return () => clearInterval(intervalId);\r\n  }, [isRunning, time, props]);\r\n\r\n  const setStopTime = useCallback(() => {}, [isRunning]);\r\n\r\n  // Hours calculation\r\n  const hours = Math.floor(time / 360000);\r\n\r\n  // Minutes calculation\r\n  const minutes = Math.floor((time % 360000) / 6000);\r\n\r\n  // Seconds calculation\r\n  const seconds = Math.floor((time % 6000) / 100);\r\n\r\n  // Milliseconds calculation\r\n  const milliseconds = time % 100;\r\n\r\n  // Method to start and stop timer\r\n  const startAndStop = () => {\r\n    setIsRunning(!isRunning);\r\n  };\r\n\r\n  // Method to reset timer back to 0\r\n  const reset = () => {\r\n    setTime(0);\r\n  };\r\n  return (\r\n    <div className=\"stopwatch-container\">\r\n      <p className=\"stopwatch-time\">\r\n        {hours}:{minutes.toString().padStart(2, \"0\")}:\r\n        {seconds.toString().padStart(2, \"0\")}\r\n        {/* :\r\n        {milliseconds.toString().padStart(2, \"0\")} */}\r\n      </p>\r\n      {/* <div className=\"stopwatch-buttons\">\r\n        <button className=\"stopwatch-button\" onClick={startAndStop}>\r\n          {isRunning ? \"Stop\" : \"Start\"}\r\n        </button>\r\n        <button className=\"stopwatch-button\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stopwatch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAO,iBAAiB;AACxB,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC;;EAE5C;EACA,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAC5Ce,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACX,KAAK,CAAC,CAAC;EAE/CN,SAAS,CAAC,MAAM;IACd,IAAIkB,UAAU;IACdL,YAAY,CAACP,KAAK,CAACa,GAAG,CAAC;IACvB,IAAIP,SAAS,EAAE;MACb;MACAM,UAAU,GAAGE,WAAW,CAAC,MAAMX,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IACvD;IACA,OAAO,MAAMa,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,CAACN,SAAS,EAAEJ,IAAI,EAAEF,KAAK,CAAC,CAAC;EAE5B,MAAMgB,WAAW,GAAGrB,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAACW,SAAS,CAAC,CAAC;;EAEtD;EACA,MAAMW,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACjB,IAAI,GAAG,MAAM,CAAC;;EAEvC;EACA,MAAMkB,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEjB,IAAI,GAAG,MAAM,GAAI,IAAI,CAAC;;EAElD;EACA,MAAMmB,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEjB,IAAI,GAAG,IAAI,GAAI,GAAG,CAAC;;EAE/C;EACA,MAAMoB,YAAY,GAAGpB,IAAI,GAAG,GAAG;;EAE/B;EACA,MAAMqB,YAAY,GAAGA,CAAA,KAAM;IACzBhB,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMkB,KAAK,GAAGA,CAAA,KAAM;IAClBrB,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EACD,oBACEL,OAAA;IAAK2B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClC5B,OAAA;MAAG2B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAC1BT,KAAK,EAAC,GAAC,EAACG,OAAO,CAACO,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,GAC7C,EAACP,OAAO,CAACM,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASD,CAAC;AAEV;AAAC/B,EAAA,CA5DQF,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AA8DlB,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}