[{"D:\\ReactJS_101\\quizapp_v1.0\\src\\index.js":"1","D:\\ReactJS_101\\quizapp_v1.0\\src\\App.js":"2","D:\\ReactJS_101\\quizapp_v1.0\\src\\reportWebVitals.js":"3","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Homepage\\HomePage.js":"4","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\LoginPage\\LoginPage.js":"5","D:\\ReactJS_101\\quizapp_v1.0\\src\\Regex.js":"6","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\UserHomePage\\UserHomePage.js":"7","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\LoginPage\\SignupPage.js":"8","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\UI\\Header\\TriviaHeader.js":"9","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\UpdateProfile\\UpdateProfile.js":"10","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\ViewAchievements\\ViewStats.js":"11","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\QuizHome\\QuizHomePage.js":"12","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\QuizPage\\QuizPage.js":"13","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\StopWatch\\Stopwatch.js":"14","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\Result\\ResultPage.js":"15","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\UI\\ProgressBar\\ChangingProgressProvider.js":"16","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\Result\\IndividualResult.js":"17","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\UI\\Bubble\\Bubble.js":"18"},{"size":539,"mtime":1690353062528,"results":"19","hashOfConfig":"20"},{"size":2726,"mtime":1692855861341,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1690350010950,"results":"22","hashOfConfig":"20"},{"size":1154,"mtime":1690524566668,"results":"23","hashOfConfig":"20"},{"size":4517,"mtime":1716283317032,"results":"24","hashOfConfig":"25"},{"size":215,"mtime":1690365521288,"results":"26","hashOfConfig":"20"},{"size":2198,"mtime":1693156502873,"results":"27","hashOfConfig":"20"},{"size":7853,"mtime":1693155160151,"results":"28","hashOfConfig":"20"},{"size":1028,"mtime":1691560532018,"results":"29","hashOfConfig":"20"},{"size":8112,"mtime":1693152613814,"results":"30","hashOfConfig":"20"},{"size":4307,"mtime":1693156561062,"results":"31","hashOfConfig":"20"},{"size":4818,"mtime":1692696991634,"results":"32","hashOfConfig":"20"},{"size":6832,"mtime":1692694971875,"results":"33","hashOfConfig":"20"},{"size":2328,"mtime":1691642042317,"results":"34","hashOfConfig":"20"},{"size":9698,"mtime":1693155797050,"results":"35","hashOfConfig":"20"},{"size":528,"mtime":1691642473636,"results":"36","hashOfConfig":"20"},{"size":3129,"mtime":1692880732424,"results":"37","hashOfConfig":"20"},{"size":322,"mtime":1692864201944,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"zgj0tw",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1j231sj",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ReactJS_101\\quizapp_v1.0\\src\\index.js",[],[],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\App.js",["97"],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\reportWebVitals.js",[],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Homepage\\HomePage.js",[],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\LoginPage\\LoginPage.js",["98","99","100","101","102"],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Regex.js",[],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\UserHomePage\\UserHomePage.js",["103","104","105","106","107"],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\LoginPage\\SignupPage.js",[],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\UI\\Header\\TriviaHeader.js",[],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\UpdateProfile\\UpdateProfile.js",["108","109","110","111","112","113","114","115","116","117"],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\ViewAchievements\\ViewStats.js",["118","119","120","121","122"],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\QuizHome\\QuizHomePage.js",["123","124","125","126","127","128"],[],"import React, { useState } from \"react\";\r\nimport classes from \"./QuizHomePage.module.css\";\r\nimport TriviaHeader from \"../../../UI/Header/TriviaHeader\";\r\nimport axios from \"axios\";\r\nimport { Dialog, DialogActions, DialogTitle } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport image from \"../../../../images/timer.gif\";\r\n\r\nfunction QuizHomePage(props) {\r\n  const [token, setToken] = useState(\r\n    JSON.parse(sessionStorage.getItem(\"token\"))\r\n  );\r\n  const [questions, setQuestions] = useState();\r\n  const [category, setCategory] = useState();\r\n  const [difficulty, setDifficulty] = useState();\r\n  const [answers, setAnswers] = useState();\r\n  const [setup, setSetup] = useState(true);\r\n  const [open, setOpen] = useState(true);\r\n  const [buttonState, setButtonState] = useState(true);\r\n  const [quiz, setQuiz] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const setupHandler = () => {\r\n    axios\r\n      .get(\r\n        `https://opentdb.com/api.php?amount=` +\r\n          questions +\r\n          `&category=` +\r\n          category +\r\n          `&difficulty=` +\r\n          difficulty +\r\n          `&type=multiple`\r\n      )\r\n      .then((res) => {\r\n        console.log(\"QUIZ : \" + JSON.stringify(res.data.results));\r\n        localStorage.setItem(\"quiz\", JSON.stringify(res.data.results));\r\n        setQuiz(res.data.results);\r\n      });\r\n    axios.get(\"http://localhost:3031/answers\").then((res) => {\r\n      setAnswers(res.data);\r\n    });\r\n    setSetup(false);\r\n    setTimeout(() => {\r\n      setButtonState(false);\r\n      setOpen(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const quizHandler = () => {\r\n    if (answers.length) {\r\n      for (let i = 1; i < answers.length + 1; i++) {\r\n        axios.delete(`http://localhost:3031/answers/` + i).then((res) => {\r\n          console.log(\"Response\", JSON.stringify(res.data));\r\n        });\r\n      }\r\n    }\r\n    navigate(\"/quiz\", { state: quiz });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    setSetup(true);\r\n    setOpen(true);\r\n    setButtonState(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div>\r\n        <TriviaHeader token={token} />\r\n      </div>\r\n      <div className={classes.quizHomeContainer}>\r\n        <h1>Take a Quiz</h1>\r\n        {setup ? (\r\n          <div className={classes.formBox}>\r\n            <form onSubmit={setupHandler}>\r\n              <div className={classes.selections}>\r\n                <label>Total Questions</label>\r\n                <input\r\n                  type=\"number\"\r\n                  min={5}\r\n                  max={20}\r\n                  onChange={(e) => setQuestions(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className={classes.selections}>\r\n                <label>Category</label>\r\n                <select\r\n                  name=\"Category\"\r\n                  className={classes.selectbox}\r\n                  onChange={(event) => setCategory(event.target.value)}\r\n                  required\r\n                >\r\n                  <option disabled selected value>\r\n                    Select a category..\r\n                  </option>\r\n                  <option value=\"9\">General Knowledge</option>\r\n                  <option value=\"17\">Science & Nature</option>\r\n                  <option value=\"21\">Sports</option>\r\n                  <option value=\"22\">Geography</option>\r\n                  <option value=\"23\">History</option>\r\n                  <option value=\"24\">Politics</option>\r\n                  <option value=\"25\">Art</option>\r\n                  <option value=\"27\">Animals</option>\r\n                  <option value=\"28\">Vehicles</option>\r\n                </select>\r\n              </div>\r\n              <div className={classes.selections}>\r\n                <label>Difficulty</label>\r\n                <select\r\n                  name=\"Difficulty\"\r\n                  className={classes.selectbox}\r\n                  onChange={(event) => setDifficulty(event.target.value)}\r\n                  required\r\n                >\r\n                  <option disabled selected value>\r\n                    Select difficulty level..\r\n                  </option>\r\n                  <option value=\"easy\">Easy</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"hard\">Hard</option>\r\n                </select>\r\n              </div>\r\n              <button>Submit</button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.resultBox}>\r\n            <h3>Your Quiz has been setup!</h3>\r\n            <button onClick={quizHandler} disabled={buttonState}>\r\n              Proceed\r\n            </button>\r\n            <p onClick={resetHandler}>Setup Again?</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizHomePage;\r\n","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\QuizPage\\QuizPage.js",["129","130","131"],[],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport classes from \"./QuizPage.module.css\";\r\nimport \"./Question.css\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Dialog, DialogActions, DialogTitle } from \"@mui/material\";\r\nimport Stopwatch from \"../StopWatch/Stopwatch\";\r\nimport { message } from \"antd\";\r\n\r\nfunction QuizPage(props) {\r\n  const quiz = useLocation().state;\r\n  console.log(\"USELOCATION\", JSON.stringify(quiz));\r\n  const [category, setCategory] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [correctAnswers, setCorrectAnswers] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [buttonState, setButtonState] = useState(false);\r\n  const [open, setOpen] = useState(true);\r\n  const [run, setRun] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [checkState, setCheckState] = useState({\r\n    check0: false,\r\n    check1: false,\r\n    check2: false,\r\n    check3: false,\r\n  });\r\n  const [answerState, setAnswerState] = useState({\r\n    index: index,\r\n    answer: \"\",\r\n  });\r\n  const answers = [];\r\n  answers.push(quiz[index].incorrect_answers[0]);\r\n  answers.push(quiz[index].incorrect_answers[1]);\r\n  answers.push(quiz[index].incorrect_answers[2]);\r\n  answers.push(quiz[index].correct_answer);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setRun(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setupCorrectAnswers();\r\n    quiz.map((index) => {\r\n      setCategory(index.category);\r\n    });\r\n\r\n    if (index === quiz.length - 1) {\r\n      setButtonState(true);\r\n    } else {\r\n      setButtonState(false);\r\n    }\r\n\r\n    const shuffled = [...answers].sort(() => 0.5 - Math.random());\r\n    setOptions(shuffled);\r\n  }, [index]);\r\n\r\n  const setupCorrectAnswers = useCallback(() => {\r\n    for (let i = 0; i < quiz.length; i++) {\r\n      setCorrectAnswers((ques) => [\r\n        ...ques,\r\n        { index: i + 1, answer: quiz[i].correct_answer },\r\n      ]);\r\n    }\r\n    localStorage.setItem(\"correctAnswers\", JSON.stringify(correctAnswers));\r\n  }, [open]);\r\n\r\n  const handleRadio = (e) => {\r\n    setAnswerState({\r\n      index: index + 1,\r\n      answer: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (\r\n      checkState.check0 ||\r\n      checkState.check1 ||\r\n      checkState.check2 ||\r\n      checkState.check3\r\n    ) {\r\n      if (index < quiz.length) {\r\n        setIndex(index + 1);\r\n      } else {\r\n        setIndex(index);\r\n      }\r\n      axios.post(\"http://localhost:3031/answers\", answerState).then((res) => {\r\n        console.log(\"RESPONSE : \" + JSON.stringify(res.data));\r\n      });\r\n      setCheckState({\r\n        check0: false,\r\n        check1: false,\r\n        check2: false,\r\n        check3: false,\r\n      });\r\n    } else {\r\n      message.warning(\"Please choose an option!\");\r\n    }\r\n  };\r\n\r\n  const resultHandler = () => {\r\n    if (\r\n      checkState.check0 ||\r\n      checkState.check1 ||\r\n      checkState.check2 ||\r\n      checkState.check3\r\n    ) {\r\n      axios.post(\"http://localhost:3031/answers\", answerState).then((res) => {\r\n        console.log(\"RESPONSE : \" + JSON.stringify(res.data));\r\n      });\r\n      setRun(false);\r\n      // navigate(\"/\");\r\n    } else {\r\n      message.warning(\"Please choose an option!\");\r\n    }\r\n    navigate(\"/result\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>{\"Here We Go!\"}</DialogTitle>\r\n        <DialogActions>\r\n          <button onClick={handleClose}>OK</button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className={classes.headerContainer}>\r\n        <div className={classes.category}>\r\n          <b>Category :</b> {category}\r\n        </div>\r\n        {console.log(\"Correct Answers :\" + JSON.stringify(correctAnswers))}\r\n        <div className={classes.timer}>\r\n          <b>Time : </b>\r\n          <Stopwatch run={run} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.questionContainer}>\r\n        {/* <Question state={handleState} /> */}\r\n        {/* <div className={classes.container}> */}\r\n        <div className=\"question\">\r\n          <h3>{index + 1}.&nbsp;&nbsp;&nbsp;&nbsp;</h3>\r\n\r\n          <h3 dangerouslySetInnerHTML={{ __html: quiz[index].question }} />\r\n        </div>\r\n        <div className=\"options\">\r\n          <form>\r\n            <div className=\"option\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"options\"\r\n                value={options[0]}\r\n                checked={checkState.check0}\r\n                onChange={(e) => {\r\n                  handleRadio(e);\r\n                  setCheckState({\r\n                    check0: true,\r\n                  });\r\n                }}\r\n              />\r\n              <label dangerouslySetInnerHTML={{ __html: options[0] }} />\r\n            </div>\r\n            <div className=\"option\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"options\"\r\n                value={options[1]}\r\n                checked={checkState.check1}\r\n                onChange={(e) => {\r\n                  handleRadio(e);\r\n                  setCheckState({\r\n                    check1: true,\r\n                  });\r\n                }}\r\n              />\r\n              <label dangerouslySetInnerHTML={{ __html: options[1] }} />\r\n            </div>\r\n            <div className=\"option\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"options\"\r\n                value={options[2]}\r\n                checked={checkState.check2}\r\n                onChange={(e) => {\r\n                  handleRadio(e);\r\n                  setCheckState({\r\n                    check2: true,\r\n                  });\r\n                }}\r\n              />\r\n              <label dangerouslySetInnerHTML={{ __html: options[2] }} />\r\n            </div>\r\n            <div className=\"option\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"options\"\r\n                value={options[3]}\r\n                checked={checkState.check3}\r\n                onChange={(e) => {\r\n                  handleRadio(e);\r\n                  setCheckState({\r\n                    check3: true,\r\n                  });\r\n                }}\r\n              />\r\n              <label dangerouslySetInnerHTML={{ __html: options[3] }} />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {!buttonState ? (\r\n        <div className={classes.change}>\r\n          <div className={classes.changeButton2} onClick={handleNext}>\r\n            Next\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={classes.change}>\r\n          <div className={classes.changeButton2} onClick={resultHandler}>\r\n            Submit\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\StopWatch\\Stopwatch.js",["132","133","134","135","136","137"],[],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./Stopwatch.css\";\r\nimport { useAsyncError } from \"react-router-dom\";\r\n\r\nfunction Stopwatch(props) {\r\n  // state to store time\r\n  const [time, setTime] = useState(0);\r\n  const [finalTime, setFinalTime] = useState({\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  });\r\n\r\n  // state to check stopwatch running or not\r\n  const [isRunning, setIsRunning] = useState();\r\n  console.log(\"PROPSS :\" + JSON.stringify(props));\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n    setStopTime();\r\n    setIsRunning(props.run);\r\n    if (isRunning) {\r\n      // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\r\n      intervalId = setInterval(() => setTime(time + 1), 10);\r\n    }\r\n    return () => clearInterval(intervalId);\r\n  }, [isRunning, time, props]);\r\n\r\n  const setStopTime = useCallback(() => {\r\n    if (!isRunning) {\r\n      setFinalTime({\r\n        hours: hours,\r\n        minutes: minutes,\r\n        seconds: seconds,\r\n      });\r\n      localStorage.setItem(\"Final Time\", JSON.stringify(finalTime));\r\n      console.log(\"I GET INSIDE AS WELL!!!\");\r\n    }\r\n    console.log(\"I GET IN DIS!!\");\r\n  }, [isRunning]);\r\n\r\n  // Hours calculation\r\n  const hours = Math.floor(time / 360000);\r\n\r\n  // Minutes calculation\r\n  const minutes = Math.floor((time % 360000) / 6000);\r\n\r\n  // Seconds calculation\r\n  const seconds = Math.floor((time % 6000) / 100);\r\n\r\n  // Milliseconds calculation\r\n  const milliseconds = time % 100;\r\n\r\n  // Method to start and stop timer\r\n  const startAndStop = () => {\r\n    setIsRunning(!isRunning);\r\n  };\r\n\r\n  // Method to reset timer back to 0\r\n  const reset = () => {\r\n    setTime(0);\r\n  };\r\n  return (\r\n    <div className=\"stopwatch-container\">\r\n      <p className=\"stopwatch-time\">\r\n        {hours}:{minutes.toString().padStart(2, \"0\")}:\r\n        {seconds.toString().padStart(2, \"0\")}\r\n        {/* :\r\n        {milliseconds.toString().padStart(2, \"0\")} */}\r\n      </p>\r\n      {/* <div className=\"stopwatch-buttons\">\r\n        <button className=\"stopwatch-button\" onClick={startAndStop}>\r\n          {isRunning ? \"Stop\" : \"Start\"}\r\n        </button>\r\n        <button className=\"stopwatch-button\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stopwatch;\r\n","D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\Result\\ResultPage.js",["138","139","140","141","142","143","144","145","146"],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\UI\\ProgressBar\\ChangingProgressProvider.js",[],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\Dashboard\\Quiz\\Result\\IndividualResult.js",["147","148","149","150","151","152","153"],[],"D:\\ReactJS_101\\quizapp_v1.0\\src\\Components\\UI\\Bubble\\Bubble.js",[],[],{"ruleId":"154","severity":1,"message":"155","line":10,"column":10,"nodeType":"156","messageId":"157","endLine":10,"endColumn":19},{"ruleId":"154","severity":1,"message":"158","line":1,"column":28,"nodeType":"156","messageId":"157","endLine":1,"endColumn":35},{"ruleId":"154","severity":1,"message":"159","line":13,"column":10,"nodeType":"156","messageId":"157","endLine":13,"endColumn":15},{"ruleId":"154","severity":1,"message":"160","line":14,"column":10,"nodeType":"156","messageId":"157","endLine":14,"endColumn":22},{"ruleId":"154","severity":1,"message":"161","line":14,"column":24,"nodeType":"156","messageId":"157","endLine":14,"endColumn":39},{"ruleId":"162","severity":1,"message":"163","line":40,"column":15,"nodeType":"164","messageId":"165","endLine":54,"endColumn":16},{"ruleId":"154","severity":1,"message":"166","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":17},{"ruleId":"154","severity":1,"message":"167","line":9,"column":17,"nodeType":"156","messageId":"157","endLine":9,"endColumn":25},{"ruleId":"154","severity":1,"message":"168","line":12,"column":18,"nodeType":"156","messageId":"157","endLine":12,"endColumn":27},{"ruleId":"154","severity":1,"message":"169","line":16,"column":9,"nodeType":"156","messageId":"157","endLine":16,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":28,"column":6,"nodeType":"172","endLine":28,"endColumn":8,"suggestions":"173"},{"ruleId":"154","severity":1,"message":"166","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":17},{"ruleId":"154","severity":1,"message":"174","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":14},{"ruleId":"154","severity":1,"message":"167","line":12,"column":17,"nodeType":"156","messageId":"157","endLine":12,"endColumn":25},{"ruleId":"154","severity":1,"message":"175","line":15,"column":20,"nodeType":"156","messageId":"157","endLine":15,"endColumn":31},{"ruleId":"154","severity":1,"message":"176","line":24,"column":10,"nodeType":"156","messageId":"157","endLine":24,"endColumn":26},{"ruleId":"154","severity":1,"message":"177","line":24,"column":28,"nodeType":"156","messageId":"157","endLine":24,"endColumn":47},{"ruleId":"154","severity":1,"message":"178","line":25,"column":10,"nodeType":"156","messageId":"157","endLine":25,"endColumn":26},{"ruleId":"154","severity":1,"message":"179","line":25,"column":28,"nodeType":"156","messageId":"157","endLine":25,"endColumn":47},{"ruleId":"170","severity":1,"message":"180","line":34,"column":6,"nodeType":"172","endLine":34,"endColumn":8,"suggestions":"181"},{"ruleId":"170","severity":1,"message":"182","line":58,"column":6,"nodeType":"172","endLine":58,"endColumn":20,"suggestions":"183"},{"ruleId":"154","severity":1,"message":"167","line":10,"column":17,"nodeType":"156","messageId":"157","endLine":10,"endColumn":25},{"ruleId":"154","severity":1,"message":"168","line":13,"column":18,"nodeType":"156","messageId":"157","endLine":13,"endColumn":27},{"ruleId":"154","severity":1,"message":"175","line":16,"column":20,"nodeType":"156","messageId":"157","endLine":16,"endColumn":31},{"ruleId":"154","severity":1,"message":"169","line":19,"column":9,"nodeType":"156","messageId":"157","endLine":19,"endColumn":17},{"ruleId":"170","severity":1,"message":"184","line":49,"column":6,"nodeType":"172","endLine":49,"endColumn":23,"suggestions":"185"},{"ruleId":"154","severity":1,"message":"186","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":16},{"ruleId":"154","severity":1,"message":"187","line":5,"column":18,"nodeType":"156","messageId":"157","endLine":5,"endColumn":31},{"ruleId":"154","severity":1,"message":"188","line":5,"column":33,"nodeType":"156","messageId":"157","endLine":5,"endColumn":44},{"ruleId":"154","severity":1,"message":"189","line":7,"column":8,"nodeType":"156","messageId":"157","endLine":7,"endColumn":13},{"ruleId":"154","severity":1,"message":"167","line":10,"column":17,"nodeType":"156","messageId":"157","endLine":10,"endColumn":25},{"ruleId":"154","severity":1,"message":"190","line":18,"column":10,"nodeType":"156","messageId":"157","endLine":18,"endColumn":14},{"ruleId":"191","severity":1,"message":"192","line":44,"column":22,"nodeType":"193","messageId":"194","endLine":44,"endColumn":24},{"ruleId":"170","severity":1,"message":"195","line":56,"column":6,"nodeType":"172","endLine":56,"endColumn":13,"suggestions":"196"},{"ruleId":"170","severity":1,"message":"197","line":66,"column":6,"nodeType":"172","endLine":66,"endColumn":12,"suggestions":"198"},{"ruleId":"154","severity":1,"message":"199","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":23},{"ruleId":"170","severity":1,"message":"200","line":27,"column":6,"nodeType":"172","endLine":27,"endColumn":30,"suggestions":"201"},{"ruleId":"170","severity":1,"message":"202","line":40,"column":6,"nodeType":"172","endLine":40,"endColumn":17,"suggestions":"203"},{"ruleId":"154","severity":1,"message":"204","line":52,"column":9,"nodeType":"156","messageId":"157","endLine":52,"endColumn":21},{"ruleId":"154","severity":1,"message":"205","line":55,"column":9,"nodeType":"156","messageId":"157","endLine":55,"endColumn":21},{"ruleId":"154","severity":1,"message":"206","line":60,"column":9,"nodeType":"156","messageId":"157","endLine":60,"endColumn":14},{"ruleId":"154","severity":1,"message":"207","line":7,"column":8,"nodeType":"156","messageId":"157","endLine":7,"endColumn":32},{"ruleId":"154","severity":1,"message":"208","line":9,"column":3,"nodeType":"156","messageId":"157","endLine":9,"endColumn":11},{"ruleId":"154","severity":1,"message":"199","line":10,"column":3,"nodeType":"156","messageId":"157","endLine":10,"endColumn":16},{"ruleId":"154","severity":1,"message":"209","line":12,"column":3,"nodeType":"156","messageId":"157","endLine":12,"endColumn":18},{"ruleId":"154","severity":1,"message":"210","line":14,"column":10,"nodeType":"156","messageId":"157","endLine":14,"endColumn":19},{"ruleId":"154","severity":1,"message":"211","line":18,"column":21,"nodeType":"156","messageId":"157","endLine":18,"endColumn":33},{"ruleId":"154","severity":1,"message":"212","line":39,"column":22,"nodeType":"156","messageId":"157","endLine":39,"endColumn":35},{"ruleId":"170","severity":1,"message":"213","line":52,"column":6,"nodeType":"172","endLine":52,"endColumn":13,"suggestions":"214"},{"ruleId":"170","severity":1,"message":"215","line":86,"column":6,"nodeType":"172","endLine":86,"endColumn":16,"suggestions":"216"},{"ruleId":"154","severity":1,"message":"217","line":9,"column":9,"nodeType":"156","messageId":"157","endLine":9,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":27,"column":22,"nodeType":"193","messageId":"194","endLine":27,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":32,"column":23,"nodeType":"193","messageId":"194","endLine":32,"endColumn":25},{"ruleId":"170","severity":1,"message":"218","line":36,"column":6,"nodeType":"172","endLine":36,"endColumn":13,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":46,"column":17,"nodeType":"222","endLine":46,"endColumn":38},{"ruleId":"220","severity":1,"message":"221","line":59,"column":13,"nodeType":"222","endLine":59,"endColumn":32},{"ruleId":"220","severity":1,"message":"221","line":68,"column":13,"nodeType":"222","endLine":68,"endColumn":34},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'token' is assigned a value but never used.","'usernameData' is assigned a value but never used.","'setUsernameData' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'LoginPage' is defined but never used.","'setToken' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'Bubble' is defined but never used.","'setUserData' is assigned a value but never used.","'usernameCriteria' is assigned a value but never used.","'setUsernameCriteria' is assigned a value but never used.","'passwordCriteria' is assigned a value but never used.","'setPasswordCriteria' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.",["224"],"React Hook useCallback has a missing dependency: 'password'. Either include it or remove the dependency array.",["225"],"React Hook useEffect has missing dependencies: 'previousGameWinPercent', 'userData.currentGame.correctAnswers', 'userData.currentGame.questions', and 'userId'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPreviousGameWinPercent' needs the current value of 'userData.currentGame.correctAnswers'.",["226"],"'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'image' is defined but never used.","'open' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'answers', 'quiz', and 'setupCorrectAnswers'. Either include them or remove the dependency array.",["227"],"React Hook useCallback has missing dependencies: 'correctAnswers' and 'quiz'. Either include them or remove the dependency array.",["228"],"'useAsyncError' is defined but never used.","React Hook useEffect has a missing dependency: 'setStopTime'. Either include it or remove the dependency array.",["229"],"React Hook useCallback has missing dependencies: 'finalTime', 'hours', 'minutes', and 'seconds'. Either include them or remove the dependency array.",["230"],"'milliseconds' is assigned a value but never used.","'startAndStop' is assigned a value but never used.","'reset' is assigned a value but never used.","'ChangingProgressProvider' is defined but never used.","'Navigate' is defined but never used.","'useSearchParams' is defined but never used.","'stringify' is defined but never used.","'setAnswerKey' is assigned a value but never used.","'setDimensions' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'quiz.length'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'answerKey', 'answerPaper', 'correctAnswers', and 'userId'. Either include them or remove the dependency array.",["232"],"'quizData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'answerKey', 'answers', and 'attempts'. Either include them or remove the dependency array.",["233"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [userId]",{"range":"256","text":"257"},"Update the dependencies array to be: [userData]",{"range":"258","text":"259"},"Update the dependencies array to be: [confPassword, password]",{"range":"260","text":"261"},"Update the dependencies array to be: [currentTabIndex, previousGameWinPercent, userData.currentGame.correctAnswers, userData.currentGame.questions, userId]",{"range":"262","text":"263"},"Update the dependencies array to be: [answers, index, quiz, setupCorrectAnswers]",{"range":"264","text":"265"},"Update the dependencies array to be: [correctAnswers, quiz]",{"range":"266","text":"267"},"Update the dependencies array to be: [isRunning, time, props, setStopTime]",{"range":"268","text":"269"},"Update the dependencies array to be: [finalTime, hours, isRunning, minutes, seconds]",{"range":"270","text":"271"},"Update the dependencies array to be: [index, quiz.length]",{"range":"272","text":"273"},"Update the dependencies array to be: [answerKey, answerPaper, confetti, correctAnswers, userId]",{"range":"274","text":"275"},"Update the dependencies array to be: [answerKey, answers, attempts, props]",{"range":"276","text":"277"},[1015,1017],"[userId]",[1562,1564],"[userData]",[2184,2198],"[confPassword, password]",[1835,1852],"[currentTabIndex, previousGameWinPercent, userData.currentGame.correctAnswers, userData.currentGame.questions, userId]",[1753,1760],"[answers, index, quiz, setupCorrectAnswers]",[2076,2082],"[correctAnswers, quiz]",[820,844],"[isRunning, time, props, setStopTime]",[1191,1202],"[finalTime, hours, isRunning, minutes, seconds]",[1796,1803],"[index, quiz.length]",[2749,2759],"[answerKey, answerPaper, confetti, correctAnswers, userId]",[1181,1188],"[answerKey, answers, attempts, props]"]